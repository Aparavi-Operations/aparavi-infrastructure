---
- name: Fetch OS dependent variables
  include_vars:
    file: '{{ item }}'
    name: 'os_vars'
  with_first_found:
    - files:
        - '{{ ansible_facts.distribution }}_{{ ansible_facts.distribution_major_version }}.yml'
        - '{{ ansible_facts.distribution }}.yml'
        - '{{ ansible_facts.os_family }}_{{ ansible_facts.distribution_major_version }}.yml'
        - '{{ ansible_facts.os_family }}.yml'
      skip: true
  tags: always

# we only override variables with our default, if they have not been specified already
# by default the lookup functions finds all varnames containing the string, therefore
# we add ^ and $ to denote start and end of string, so this returns only exact matches
- name: Set OS dependent variables, if not already defined by user  # noqa var-naming
  set_fact:
    '{{ item.key }}': '{{ item.value }}'
  when: "not lookup('varnames', '^' + item.key + '$')"
  with_dict: '{{ os_vars }}'
  tags: always

- import_tasks: auditd.yml
  when: os_auditd_enabled | bool
  tags:
    - auditd
    - os_hardening

- import_tasks: cron.yml
  when: os_cron_enabled | bool
  tags:
    - os_hardening
    - cron

- import_tasks: ctrlaltdel.yml
  when: os_ctrlaltdel_disabled | bool
  tags:
    - os_hardening
    - ctraltdel

- import_tasks: limits.yml
  when: os_limits_enabled | bool
  tags:
    - os_hardening
    - limits

- import_tasks: login_defs.yml
  when: os_login_defs_enabled | bool
  tags:
    - os_hardening
    - login_defs

- import_tasks: minimize_access.yml
  when: os_minimize_access_enabled | bool
  tags:
    - os_hardening
    - minimize_access

- import_tasks: pam.yml
  when: os_pam_enabled | bool
  tags:
    - os_hardening
    - pam

- import_tasks: modprobe.yml
  when: os_modprobe_enabled | bool
  tags:
    - os_hardening
    - modprobe

- import_tasks: profile.yml
  when: os_profile_enabled | bool
  tags:
    - os_hardening
    - profile

- import_tasks: securetty.yml
  when: os_securetty_enabled | bool
  tags:
    - os_hardening
    - securetty

- import_tasks: suid_sgid.yml
  when: os_security_suid_sgid_enforce  | bool
  tags:
    - os_hardening
    - suid_sgid

- import_tasks: sysctl.yml
  when: os_sysctl_enabled | bool
  tags:
    - os_hardening
    - sysctl

- import_tasks: user_accounts.yml
  when: os_user_accounts_enabled | bool
  tags:
    - os_hardening
    - user_accounts

- import_tasks: rhosts.yml
  when: os_rhosts_enabled | bool
  tags:
    - os_hardening
    - rhosts

- import_tasks: yum.yml
  when:
    - ansible_facts.os_family == 'RedHat'
    - os_yum_enabled | bool
  tags:
    - os_hardening
    - yum

- import_tasks: apt.yml
  when:
    - ansible_facts.os_family == 'Debian'
    - os_apt_enabled | bool
  tags:
    - os_hardening
    - apt

- import_tasks: selinux.yml
  when:
    - ansible_facts.selinux.status == 'enabled'
    - os_selinux_enabled | bool
  tags:
    - os_hardening
    - selinux
